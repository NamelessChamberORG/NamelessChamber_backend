name: backend-cd

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build_and_push:
    name: Build & Push to GHCR
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.IMAGE }}
          cache-from: type=registry,ref=${{ vars.IMAGE }}
          cache-to: type=inline

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: production

    env:
      APP_DIR: /home/ubuntu/app
      EXPOSE_PORT: "8080"
      IMAGE: ${{ vars.IMAGE }}

    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          envs: APP_DIR,EXPOSE_PORT,IMAGE
          script: |
            set -e
            mkdir -p $APP_DIR
            cd $APP_DIR
          
            cat > .env << 'EOF'
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            EOF
          
            cat > docker-compose.yml << 'YAML'
            services:
              api:
                image: ${IMAGE}
                container_name: api
                ports:
                  - "${EXPOSE_PORT}:8080"
                env_file:
                  - .env
                environment:
                  - SPRING_PROFILES_ACTIVE=prod
                  - TZ=Asia/Seoul
                restart: unless-stopped
            YAML
          
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
            docker compose config
            docker compose down || true
            docker compose pull
            docker compose up -d
            docker image prune -f
